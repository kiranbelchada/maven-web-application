pipeline
{
agent any
tools{
maven "maven 3.8.4"
}
triggers {
  pollSCM '* * * * *'
}
options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}

stages {
//checkout Code stage
stage('CheckoutCode')
{
steps{
sendSlackNotifications('STARTED')
git branch: 'development', credentialsId: 'c721a30f-cb00-439e-a13e-ac6c6f473a7b', url: 'https://github.com/kiranbelchada/maven-web-application.git'
}
}
//Build stage
stage('Build')
{
steps{
sh "mvn clean package"}
}
//Execute SonarQube Report
stage('ExecuteSonarQubeReport')
{
steps{
 sh "mvn clean sonar:sonar"}
 }
 //Upload Articats Into Artifactory Repo
 stage('UploadArticatsIntoNexus')
 {
 steps{
 sh "mvn deploy"}
 }
 stage('DeployAppIntoTomcatServer'){
 steps{
 sshagent(['1296951c-e840-4889-bf61-3a8d53609b5d']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@15.206.75.245:/opt/apache-tomcat-9.0.63/webapps"
 }
 }
 }
 }//stages closing
 post {
  success {
   sendSlackNotifications('SUCCESSFUL')   
  }
  failure {
      sendSlackNotifications('FAILURE')
  }
}

}//pipeline closing
  
 def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}

