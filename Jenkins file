@Library('sharedlibskiran') _
node('nodes'){
echo "Job name is: {$JOB_NAME}"
echo "Node name is: {$NODE_NAME}"
echo "Build number is: {$BUILD_NUMBER}"
def mavenHome = tool name:"maven 3.8.4"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
try{
sendSlackNotifications('STARTED')
stage('CheckoutCode')
{
  git branch: 'development', credentialsId: 'c721a30f-cb00-439e-a13e-ac6c6f473a7b', url: 'https://github.com/kiranbelchada/maven-web-application.git'
}
stage('Build')
{
  sh "${mavenHome}/bin/mvn clean package"
}
stage('ExecuteSonarQubeReport')
{
 sh "${mavenHome}/bin/mvn sonar:sonar"
}
stage('UploadArticatsIntoNexus')
{
 sh "${mavenHome}/bin/mvn deploy"
}
stage('DeployAppIntoTomcatServer')
{
sshagent(['1296951c-e840-4889-bf61-3a8d53609b5d']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@35.154.231.121:/opt/apache-tomcat-9.0.63/webapps"
}
}
}catch (e){
currentBuild.result = "FAILED"
throe e
}
finally{
sendSlackNotifications(currentBuild.result)
}
}//node closing
//below script is to send slack notification
/*def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}*/
